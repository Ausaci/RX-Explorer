# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

pr:
  autoCancel: true
  branches:
    include:
      - master

variables:
  - name: BuildProject
    value: "Package"
  - name: Solution
    value: "**/*.sln"
  - name: BuildPlatform
    value: "x64|ARM64"
  - name: BuildConfiguration
    value: "Release"
  - name: SideloadBuildPublishLocation
    value: '$(Build.ArtifactStagingDirectory)\Sideload\\'
  - name: CIBuildPublishLocation
    value: '$(Build.ArtifactStagingDirectory)\CI\\'
  - name: NUGET_RESTORE_MSBUILD_ARGS
    value: "/p:Configuration=$(BuildConfiguration)"

jobs:
  - job: CIBuild
    displayName: "Build CI Application"
    timeoutInMinutes: 30
    pool:
      vmImage: "windows-latest"
    steps:
      - task: UseDotNet@2
        displayName: "Install .Net 7 SDK"
        inputs:
          version: 7.x

      - task: UseDotNet@2
        displayName: "Install .Net 8 SDK"
        inputs:
          version: 8.x

      - task: DownloadSecureFile@1
        name: secureFile
        displayName: "Download Publish Certificate"
        inputs:
          secureFile: "$(signingCert.secureFileName)"

      - task: PowerShell@2
        displayName: "Add AppCenter Secret Value"
        inputs:
          targetType: "inline"
          script: |
            Write-Host "Start adding AppCenter secret value."

            $AppCenterSecret = '$(appCenter.secret)'
            $TargetPath = '$(Build.SourcesDirectory)\RX_Explorer\View\ExtendedSplash.xaml.cs'
            $TargetContent = Get-Content -Path $TargetPath
            $TargetContent -Replace '<RX-Explorer-AppCenter-Secret-Value>', $AppCenterSecret | Set-Content -Path $TargetPath -Encoding UTF8

            Write-Host "AppCenter secret value was added successfully"

      - task: NuGetToolInstaller@1
        displayName: "Install Nuget ToolSet"

      - task: NuGetCommand@2
        displayName: "Restore Nuget Packages On Solution"
        inputs:
          restoreSolution: "$(Solution)"

      - task: VSBuild@1
        displayName: "Build RX-Explorer Project"
        inputs:
          solution: "$(Solution)"
          msbuildArgs: '/t:$(BuildProject):Rebuild /p:PreferredToolArchitecture="x64" /p:AppxBundlePlatforms="$(BuildPlatform)" /p:AppxPackageDir="$(CIBuildPublishLocation)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=CI /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="$(signingCert.thumbprint)" /p:PackageCertificateKeyFile="$(secureFile.secureFilePath)" /p:PackageCertificatePassword="$(signingCert.password)"'
          configuration: "$(BuildConfiguration)"
          clean: true
          msbuildArchitecture: "x64"

      - task: PublishBuildArtifacts@1
        displayName: "Publish And Upload Artifact"
        inputs:
          ArtifactName: "CIBuild"
          PathtoPublish: "$(CIBuildPublishLocation)"

  # - job: SideLoadBuild
  #   displayName: "Build Sideload Application"
  #   timeoutInMinutes: 180
  #   pool:
  #     vmImage: "windows-latest"
  #   steps:
  #     - task: UseDotNet@2
  #       displayName: "Install .Net 7 SDK"
  #       inputs:
  #         version: 7.x

  #     - task: UseDotNet@2
  #       displayName: "Install .Net 8 SDK"
  #       inputs:
  #         version: 8.x

  #     - task: DownloadSecureFile@1
  #       name: secureFile
  #       displayName: "Download Publish Certificate"
  #       inputs:
  #         secureFile: "$(signingCert.secureFileName)"

  #     - task: PowerShell@2
  #       displayName: "Add AppCenter Secret Value"
  #       inputs:
  #         targetType: "inline"
  #         script: |
  #           Write-Host "Start adding AppCenter Secret Value."

  #           $AppCenterSecret = '$(appCenter.secret)'
  #           $TargetPath = '$(Build.SourcesDirectory)\RX_Explorer\View\ExtendedSplash.xaml.cs'
  #           $TargetContent = Get-Content -Path $TargetPath
  #           $TargetContent -Replace '<RX-Explorer-AppCenter-Secret-Value>', $AppCenterSecret | Set-Content -Path $TargetPath -Encoding UTF8

  #           Write-Host "AppCenter Secret Value was added successfully"

  #     - task: NuGetToolInstaller@1
  #       displayName: "Install Nuget ToolSet"

  #     - task: NuGetCommand@2
  #       displayName: "Restore Nuget Packages On Solution"
  #       inputs:
  #         restoreSolution: "$(Solution)"

  #     - task: VSBuild@1
  #       displayName: "Build RX-Explorer Project"
  #       inputs:
  #         solution: "$(Solution)"
  #         msbuildArgs: '/t:$(BuildProject):Rebuild /p:PreferredToolArchitecture="x64" /p:AppxBundlePlatforms="$(BuildPlatform)" /p:AppxPackageDir="$(SideloadBuildPublishLocation)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="$(signingCert.thumbprint)" /p:PackageCertificateKeyFile="$(secureFile.secureFilePath)" /p:PackageCertificatePassword="$(signingCert.password)"'
  #         configuration: "$(BuildConfiguration)"
  #         clean: true
  #         msbuildArchitecture: "x64"

  #     - task: PublishBuildArtifacts@1
  #       displayName: "Publish And Upload Artifact"
  #       inputs:
  #         ArtifactName: "SideloadBuild"
  #         PathtoPublish: "$(SideloadBuildPublishLocation)"
